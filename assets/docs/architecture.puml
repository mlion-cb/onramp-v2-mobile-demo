'EOF'
@startuml
!theme plain
  title Coinbase Onramp V2 Demo App - Core Flows

  actor User

  box "App"
      participant "React Native\nApp" as App
  end box

  box "CDP"
      participant "CDP Wallet SDK" as CDP
      participant "Onramp V2 API" as OnrampAPI
      participant "Onramp FE\n(WebView)" as OnrampFE
  end box

  box "Backend"
      participant "Server" as Server
  end box

  == Flow 1: Email Login & Wallet Creation ==

  User -> App: Enter email
  App -> CDP: signInWithEmail({ email })
  CDP --> App: { flowId }

  note right of CDP: Email sent to user

  User -> App: Enter 6-digit code
  App -> CDP: verifyEmailOTP({ flowId, otp })

  CDP -> CDP: Create wallets automatically\n- Generate EVM + Solana keys\n- Create session

  App -> CDP: useCurrentUser()
  CDP --> App: User data

  App -> User: Display wallet addresses

  == Flow 2: Buy Crypto with Apple Pay ==

  User -> App: Fill form\npaymentAmount: $150\npurchaseCurrency: USDC\ndestinationNetwork: Base\npaymentMethod: Apple Pay

  App -> Server: POST /server/api\n/v2/onramp/orders\n{ \n    ...\n    isQuote: true \n}
  activate Server

  Server -> Server: Generate JWT token
  Server -> OnrampAPI: POST /v2/onramp/orders 
  OnrampAPI --> Server: Quote response

  Server --> App: Quote data
  deactivate Server

  App -> User: Display quote summary

  User -> App: Swipe to confirm

  alt Phone not verified (Apple Pay only)
      App -> Server: POST /auth/sms/start\n{ phone: "+15555555555" }
      Server -> Server: Twilio API
      Server --> App: { status: "pending" }

      User -> App: Enter SMS code
      App -> Server: POST /auth/sms/verify\n{ phone, code }
      Server -> Server: Twilio API
      Server --> App: { status: "approved" }
  end

  App -> Server: POST /server/api\n/v2/onramp/orders \n{\n    destinationWallet: "0x1234...",\n    sourceAmount: "150",\n    assetSymbol: "USDC",\n      blockchain: "base",\n    phoneNumber: "+15555555555",\n      paymentMethod: "GUEST_CHECKOUT_APPLE_PAY",\n    clientIp: "123.45.67.89"\n}
  activate Server

  Server -> Server: Resolve client IP
  Server -> Server: Generate JWT token

  Server -> OnrampAPI: POST /v2/onramp/orders
  OnrampAPI --> Server: Order created\n{\n    order: {\n      orderId: "1234",\n      ...\n    },\n    paymentLink: {\n      url: "https://pay.coinbase.com/...",\n      paymentLinkType: "PAYMENT_LINK_TYPE_APPLE_PAY_BUTTON"\n    }\n}

  Server --> App: { payment_url }
  deactivate Server

  App -> OnrampFE: Load payment_url in WebView
  activate OnrampFE

  OnrampFE -> OnrampFE: Render Apple Pay button

  OnrampFE -> App: postMessage("onramp_api.load_success")

  App -> OnrampFE: Inject JavaScript\n// Hide button\n    style.textContent = `\n      apple-pay-button {\n        display: none;\n      }\n    `;\n\n// Auto-click\n    const btn = document.getElementById(\n      'api-onramp-apple-pay-button'\n    );\n    if (btn) btn.click();

  OnrampFE -> OnrampFE: Trigger Apple Pay sheet

  group Handled natively by iOS - No developer integration required
    User -> OnrampFE: Authorize payment

    OnrampFE -> OnrampAPI: Submit payment
    OnrampAPI -> OnrampAPI: Process payment

    OnrampAPI --> OnrampFE: Payment successful
  end

  OnrampFE -> App: postMessage("onramp_api.commit_success")
  App -> User: Show "Payment Successful!"

  OnrampFE -> App: postMessage("onramp_api.polling_start")
  App -> User: Show "Tracking transaction..."

  OnrampAPI -> OnrampAPI: Send crypto to blockchain

  OnrampFE -> App: postMessage("onramp_api.polling_success")
  deactivate OnrampFE

  App -> User: Show "Complete!"
  App -> App: Close WebView

  == Flow 3: Buy Crypto with Coinbase Widget ==

  User -> App: Fill form

  App -> Server: POST /server/api
  Server -> OnrampAPI: POST /v2/onramp/sessions
  OnrampAPI --> Server: Session + Quote
  Server --> App: Quote data

  App -> User: Display quote summary

  User -> App: Swipe to confirm

  App -> Server: POST /server/api\n/v2/onramp/sessions\n{\n  destinationWallet: "0x1234...",\n    sourceAmount: "150",\n    assetSymbol: "USDC",\n    blockchain: "base",\n    paymentMethod:  "CARD"\n}  activate Server

  activate Server
  Server -> Server: Generate JWT token
  Server -> OnrampAPI: POST /v2/onramp/sessions
  OnrampAPI --> Server: Session created\n{\n    session: {\n      onrampUrl: "https://pay.coinbase.com/..."\n}
  Server --> App: { onrampUrl }
  deactivate Server

  App -> App: Linking.openURL(widget_url)

  User -> User: Complete purchase\non Coinbase page
  note right of User
      User is redirected to
      Coinbase's hosted page

      Handles payment selection,
      KYC, and transaction
  end note
@enduml
EOF